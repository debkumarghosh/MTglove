using System;
using System.IO.Ports;
using UnityEngine;

public class BluetoothCubeController : MonoBehaviour
{
    SerialPort btPort;
    public string portName = "COM5";  // Replace with your actual port name
    public int baudRate = 9600;
    public GameObject cube;  // Assign your cube in the Unity editor

    void Start()
    {
        btPort = new SerialPort(portName, baudRate);
        
        try
        {
            btPort.Open();
            Debug.Log("Bluetooth connection established.");
        }
        catch (Exception e)
        {
            Debug.LogError("Failed to open Bluetooth port: " + e.Message);
        }
    }

    void Update()
    {
        if (btPort.IsOpen && btPort.BytesToRead > 0)
        {
            try
            {
                string data = btPort.ReadLine();
                Debug.Log("Received: " + data);

                // Parse the data assuming the format "ax,ay,az,gx,gy,gz"
                string[] values = data.Split(',');
                if (values.Length == 6)
                {
                    float ax = float.Parse(values[0]) / 16384.0f;  // Adjust scale as needed
                    float ay = float.Parse(values[1]) / 16384.0f;
                    float az = float.Parse(values[2]) / 16384.0f;

                    // Use accelerometer data to move the cube in Unity
                    cube.transform.position = new Vector3(ax, ay, az);
                }
            }
            catch (Exception e)
            {
                Debug.LogError("Error reading data: " + e.Message);
            }
        }
    }

    private void OnApplicationQuit()
    {
        if (btPort != null && btPort.IsOpen)
        {
            btPort.Close();
        }
    }
}
