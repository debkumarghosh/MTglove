using System;
using System.IO;
using System.Net;
using System.Net.Sockets;
using System.Text;
using UnityEngine;

public class SimpleServer : MonoBehaviour
{
    private TcpListener server;
    private TcpClient client;
    private StreamReader reader;
    public int port = 8080;

    void Start()
    {
        try
        {
            server = new TcpListener(IPAddress.Any, port);
            server.Start();
            Debug.Log("Server is listening on port " + port);
            server.BeginAcceptTcpClient(OnClientConnected, null);
        }
        catch (Exception e)
        {
            Debug.LogError("Server Error: " + e.Message);
        }
    }

    private void OnClientConnected(IAsyncResult ar)
    {
        client = server.EndAcceptTcpClient(ar);
        reader = new StreamReader(client.GetStream(), Encoding.ASCII);
        Debug.Log("Client connected.");
        // Start reading data from client asynchronously
        server.BeginAcceptTcpClient(OnClientConnected, null);
    }

    void Update()
    {
        if (client != null && client.Connected && reader != null)
        {
            if (client.GetStream().DataAvailable)
            {
                string message = reader.ReadLine();
                Debug.Log("Received: " + message);
            }
        }
    }

    private void OnApplicationQuit()
    {
        reader?.Close();
        client?.Close();
        server?.Stop();
    }
}
